#!/bin/sh                                                                                       

PID="org.webosinternals.preware"
SID="org.webosinternals.ipkgservice"

# Handle execution as pmPostInstall.script
if [ -z "$IPKG_OFFLINE_ROOT" ]; then
  IPKG_OFFLINE_ROOT=/media/cryptofs/apps
  mount -o remount,rw /
fi

APPS=/media/cryptofs/apps

[ -d $APPS ] || { echo "Requires webOS 1.3.5 or later" ; exit 1 ; }

VERSION=`grep PRODUCT_VERSION_STRING /etc/palm-build-info | sed -e 's/.*=Palm webOS \([0-9.]*\).*/\1/'`

# Remove the obsolete Package Manager Service
if [ -f $APPS/usr/lib/ipkg/info/org.webosinternals.ipkgservice.prerm ] ; then
  IPKG_OFFLINE_ROOT=$APPS sh $APPS/usr/lib/ipkg/info/org.webosinternals.ipkgservice.prerm || true
fi
/usr/bin/ipkg -o $APPS -force-depends remove org.webosinternals.ipkgservice || true

# Remove the ipkgservice executable
rm -f /var/usr/sbin/${SID}

# Remove the dbus service
rm -f /usr/share/dbus-1/system-services/${SID}.service /var/palm/system-services/${SID}.service

# Remove the ls2 roles
rm -f /usr/share/ls2/roles/prv/${SID}.json /var/palm/ls2/roles/prv/${SID}.json
rm -f /usr/share/ls2/roles/pub/${SID}.json /var/palm/ls2/roles/pub/${SID}.json

# Stop the service if running
/sbin/stop ${SID} || true
/usr/bin/killall -9 ${SID} || true

# Remove the upstart script
rm -f /etc/event.d/${SID} /var/palm/event.d/${SID}

# Install the ipkgservice executable
mkdir -p /var/usr/sbin/
install -m 755 $APPS/usr/palm/applications/${PID}/bin/${SID} /var/usr/sbin/${SID}

# Install the dbus service
mkdir -p /var/palm/system-services
cp $APPS/usr/palm/applications/${PID}/dbus/${SID}.service /var/palm/system-services/${SID}.service

# Install the ls2 roles
if [ -d /usr/share/ls2/roles ] ; then
  cp $APPS/usr/palm/applications/${PID}/dbus/${SID}.json /usr/share/ls2/roles/prv/${SID}.json
  cp $APPS/usr/palm/applications/${PID}/dbus/${SID}.json /usr/share/ls2/roles/pub/${SID}.json
fi

# Install the upstart script
mkdir -p /var/palm/event.d
cp $APPS/usr/palm/applications/${PID}/upstart/${SID} /var/palm/event.d/${SID}

# Start the service
/sbin/start ${SID}

# Create the ipkg config and database areas
mkdir -p $APPS/etc/ipkg $APPS/usr/lib/ipkg

# Remove all list database cache files
rm -f $APPS/usr/lib/ipkg/lists/*

# Set up the architecture configuration file
rm -f $APPS/etc/ipkg/arch.conf
cp /etc/ipkg/arch.conf $APPS/etc/ipkg/arch.conf

# Install optware feeds
echo "src/gz optware http://ipkg.preware.org/feeds/optware/all" > $APPS/etc/ipkg/optware.conf
echo "src/gz optware-`/bin/uname -m` http://ipkg.preware.org/feeds/optware/`/bin/uname -m`" >> $APPS/etc/ipkg/optware.conf
sed -i -e 's|armv7l|armv7|g' $APPS/etc/ipkg/optware.conf
sed -i -e 's|armv6l|armv6|g' $APPS/etc/ipkg/optware.conf

# Install palm-* feeds
echo "src/gz palm-beta http://ipkg.preware.org/feeds/palm-beta" > $APPS/etc/ipkg/palm-beta.conf
echo "src/gz palm-beta-updates http://ipkg.preware.org/feeds/palm-beta-updates" > $APPS/etc/ipkg/palm-beta-updates.conf
echo "src/gz palm-catalog http://ipkg.preware.org/feeds/palm-catalog" > $APPS/etc/ipkg/palm-catalog.conf.new
echo "src/gz palm-catalog-updates http://ipkg.preware.org/feeds/palm-catalog-updates" > $APPS/etc/ipkg/palm-catalog-updates.conf
echo "src/gz palm-web http://ipkg.preware.org/feeds/palm-web" > $APPS/etc/ipkg/palm-web.conf
echo "src/gz palm-web-updates http://ipkg.preware.org/feeds/palm-web-updates" > $APPS/etc/ipkg/palm-web-updates.conf

# Install precentral feeds
echo "src/gz precentral http://ipkg.preware.org/feeds/precentral" > $APPS/etc/ipkg/precentral.conf
echo "src/gz precentral-themes http://ipkg.preware.org/feeds/precentral-themes" > $APPS/etc/ipkg/precentral-themes.conf.new

# Install prethemer feed
echo "src/gz prethemer http://www.prethemer.com/feeds/preware/themes" > $APPS/etc/ipkg/prethemer.conf.new

# Install webosinternals feeds
echo "src/gz webosinternals http://ipkg.preware.org/feeds/webos-internals/all" > $APPS/etc/ipkg/webos-internals.conf
echo "src/gz webosinternals-`/bin/uname -m` http://ipkg.preware.org/feeds/webos-internals/`/bin/uname -m`" >> $APPS/etc/ipkg/webos-internals.conf
sed -i -e 's|armv7l|armv7|g' $APPS/etc/ipkg/webos-internals.conf
sed -i -e 's|armv6l|armv6|g' $APPS/etc/ipkg/webos-internals.conf

# Install webos-patches feed
echo "src/gz webos-patches http://ipkg.preware.org/feeds/webos-patches/$VERSION" > $APPS/etc/ipkg/webos-patches.conf

# Install webos-kernels feed
echo "src/gz webos-kernels http://ipkg.preware.org/feeds/webos-kernels/$VERSION" > $APPS/etc/ipkg/webos-kernels.conf

if [ -f /var/preferences/org.webosinternals.preware/enable-testing-feeds ] ; then

  # Install webosinternals testing feeds
  echo "src/gz webosinternals-testing http://ipkg.preware.org/feeds/webos-internals/testing/all" > $APPS/etc/ipkg/webos-internals-testing.conf
  echo "src/gz webosinternals-testing-`/bin/uname -m` http://ipkg.preware.org/feeds/webos-internals/testing/`/bin/uname -m`" >> $APPS/etc/ipkg/webos-internals-testing.conf
  sed -i -e 's|armv7l|armv7|g' $APPS/etc/ipkg/webos-internals-testing.conf
  sed -i -e 's|armv6l|armv6|g' $APPS/etc/ipkg/webos-internals-testing.conf

  # Install webos-patches testing feed
  echo "src/gz webos-patches-testing http://ipkg.preware.org/feeds/webos-patches/testing/$VERSION" > $APPS/etc/ipkg/webos-patches-testing.conf

  # Install webos-kernels testing feed
  echo "src/gz webos-kernels-testing http://ipkg.preware.org/feeds/webos-kernels/testing/$VERSION" > $APPS/etc/ipkg/webos-kernels-testing.conf

fi

# Retain disabled status of existing feeds
if [ "`ls $APPS/etc/ipkg/*.disabled`" ] ; then
  for f in $APPS/etc/ipkg/*.disabled ; do
    if [ -f $APPS/etc/ipkg/`basename $f .disabled` ] ; then
      rm -f $f
      mv $APPS/etc/ipkg/`basename $f .disabled` $f
    fi
  done
fi

# Assert disabled status of new feeds
if [ "`ls $APPS/etc/ipkg/*.new`" ] ; then
  for f in $APPS/etc/ipkg/*.new ; do
    if [ -f $APPS/etc/ipkg/`basename $f .new` ] ; then
      rm -f $APPS/etc/ipkg/`basename $f .new`
      mv $f $APPS/etc/ipkg/`basename $f .new`
    else
      rm -f $APPS/etc/ipkg/`basename $f .new`.disabled
      mv $f $APPS/etc/ipkg/`basename $f .new`.disabled
    fi
  done
fi

exit 0
